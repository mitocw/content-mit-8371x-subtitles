#
# File:   content-mit-8371x-subtitles/Q3L9a.txt
#
# Captions for 8.421x module
#
# This file has 48 caption lines.
#
# Do not add or delete any lines.  If there is text missing at the end, please add it to the last line.
#
#----------------------------------------
There are several approaches to understanding Shor's Algorithm.
What we will do today is to use a reduction
from the problem of factoring to the problem of order
finding.
This is given by the following theorem.
The setting of the theorem begins with the definition
of two variables, p and q, which are both L-bit prime numbers.
These are the numbers we would like to find out.
We are given, though, the number N,
which is the product of p and q.
We may also, based on N, choose another number, x.
This number will be less than N minus 1,
and will also be chosen to be co-prime with N.
What this means is the number x,
which we choose randomly,
has no factors in common with N. That
means it has neither p nor q as one of its factors.
If it did, then we would be done with our problem anyway.
So we'll let r be a property of this number x.
In particular, r will be the minimum number
such that
x to the r modulo N is equal to 1.
This is an important formula for us.
It defines r as being a certain quantity.
Now r is an integer and this integer
is known as the order of x, with respect to N.
Now given this number r, for r being a nontrivial value,
that is r is even and x to the r divided by 2 modulo N is not 1.
This means, for example, r is not zero,
then it turns out that with high probability, the greatest
common divisor of this number, x to the r divided by 2 minus 4
plus 1 modulo N with the number N
is a factor of N. This last step is proven
using the Chinese remainder theorem.
Now recall that the number we are factoring has L bits.
This reduction, therefore, can be
computed in time approximately L cubed.
That time is largely taken up by the greatest common divisor
algorithm.
Overall, thus we see, that the problem of factoring the number
can be reduced to the problem of finding
r, which is known as the order of x with respect to N.
r is normally difficult to compute.
The best known classical algorithm
takes a number of steps, which is exponential in L. However,
what Shor's Algorithm provides is a quantum algorithm
for finding the order r in time which
is polynomial in L, and this is what we'll see next.